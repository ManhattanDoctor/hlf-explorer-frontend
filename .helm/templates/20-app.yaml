---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Chart.Name }}
  labels:
    service: {{ $.Chart.Name }}
    app: {{ $.Chart.Name }}
spec:
  revisionHistoryLimit: 2
  replicas: {{ pluck $.Values.global.env $.Values.infra.replicas | first | default $.Values.infra.replicas._default }}
  selector:
    matchLabels:
      service: {{ $.Chart.Name }}
      app: {{ $.Chart.Name }}
  template:
    metadata:
      labels:
        service: {{ $.Chart.Name }}
        app: {{ $.Chart.Name }}
    spec:
      imagePullSecrets:
      - name: {{ $.Values.infra.registry.secret_name }}
      containers:
      - name: app
        command: [ '/usr/sbin/nginx-debug', '-c', '/etc/nginx/kubernetes/nginx.conf' ]
{{ tuple  "hlf-explorer" . | include "werf_container_image" | indent 8 }}
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        - name: KUBERNETES_DEPLOYED
          value: {{ now }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ["/usr/sbin/nginx", "-s", "quit"]
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/kubernetes
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Chart.Name }}-nginx
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Chart.Name }}
spec:
  clusterIP: None
  selector:
    service: {{ $.Chart.Name }}
  ports:
  - name: http
    port: 80
    protocol: TCP

